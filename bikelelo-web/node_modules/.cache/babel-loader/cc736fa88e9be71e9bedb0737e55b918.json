{"ast":null,"code":"import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport { Animated, I18nManager, Image, Platform, StyleSheet, View } from 'react-native';\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nexport default function HeaderBackButton(_ref) {\n  let {\n    disabled,\n    allowFontScaling,\n    backImage,\n    label,\n    labelStyle,\n    labelVisible,\n    onLabelLayout,\n    onPress,\n    pressColor,\n    pressOpacity,\n    screenLayout,\n    tintColor: customTintColor,\n    titleLayout,\n    truncatedLabel = 'Back',\n    accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n    testID,\n    style\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState(undefined);\n  const tintColor = customTintColor !== undefined ? customTintColor : Platform.select({\n    ios: colors.primary,\n    default: colors.text\n  });\n\n  const handleLabelLayout = e => {\n    onLabelLayout === null || onLabelLayout === void 0 ? void 0 : onLabelLayout(e);\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return !label || initialLabelWidth && titleLayout && screenLayout && (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26;\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({\n        tintColor\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Image, {\n        style: [styles.icon, Boolean(labelVisible) && styles.iconWithLabel, Boolean(tintColor) && {\n          tintColor\n        }],\n        source: require('../assets/back-icon.png'),\n        fadeDuration: 0\n      });\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = /*#__PURE__*/React.createElement(View, {\n      style: screenLayout ? // We make the button extend till the middle of the screen\n      // Otherwise it appears to cut off when translating\n      [styles.labelWrapper, {\n        minWidth: screenLayout.width / 2 - 27\n      }] : null\n    }, /*#__PURE__*/React.createElement(Animated.Text, {\n      accessible: false,\n      onLayout: // This measurement is used to determine if we should truncate the label when it doesn't fit\n      // Only measure it when label is not truncated because we want the measurement of full label\n      leftLabelText === label ? handleLabelLayout : undefined,\n      style: [styles.label, tintColor ? {\n        color: tintColor\n      } : null, labelStyle],\n      numberOfLines: 1,\n      allowFontScaling: !!allowFontScaling\n    }, leftLabelText));\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return /*#__PURE__*/React.createElement(MaskedView, {\n      maskElement: /*#__PURE__*/React.createElement(View, {\n        style: styles.iconMaskContainer\n      }, /*#__PURE__*/React.createElement(Image, {\n        source: require('../assets/back-icon-mask.png'),\n        style: styles.iconMask\n      }), /*#__PURE__*/React.createElement(View, {\n        style: styles.iconMaskFillerRect\n      }))\n    }, labelElement);\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return /*#__PURE__*/React.createElement(PlatformPressable, {\n    disabled: disabled,\n    accessible: true,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel,\n    testID: testID,\n    onPress: disabled ? undefined : handlePress,\n    pressColor: pressColor,\n    pressOpacity: pressOpacity,\n    android_ripple: {\n      borderless: true\n    },\n    style: [styles.container, disabled && styles.disabled, style],\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    })\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, renderBackImage(), renderLabel()));\n}\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth,\n    // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11\n      }\n    })\n  },\n  disabled: {\n    opacity: 0.5\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start'\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithLabel: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  }\n});","map":{"version":3,"mappings":"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","names":["useTheme","React","Animated","I18nManager","Image","Platform","StyleSheet","View","MaskedView","PlatformPressable","HeaderBackButton","disabled","allowFontScaling","backImage","label","labelStyle","labelVisible","onLabelLayout","onPress","pressColor","pressOpacity","screenLayout","tintColor","customTintColor","titleLayout","truncatedLabel","accessibilityLabel","testID","style","_ref","colors","initialLabelWidth","setInitialLabelWidth","useState","undefined","select","ios","primary","default","text","handleLabelLayout","e","nativeEvent","layout","x","width","shouldTruncateLabel","renderBackImage","styles","icon","Boolean","iconWithLabel","source","require","fadeDuration","renderLabel","leftLabelText","labelElement","labelWrapper","minWidth","Text","accessible","onLayout","color","numberOfLines","OS","maskElement","iconMaskContainer","iconMask","iconMaskFillerRect","handlePress","requestAnimationFrame","accessibilityRole","android_ripple","borderless","container","hitSlop","top","right","bottom","left","Fragment","create","alignItems","flexDirection","hairlineWidth","marginVertical","marginHorizontal","opacity","fontSize","letterSpacing","height","marginLeft","marginRight","resizeMode","transform","scaleX","isRTL","margin","flex","justifyContent","backgroundColor","alignSelf"],"sources":["D:\\Git\\BikeLeLo\\bikelelo-web\\node_modules\\@react-navigation\\elements\\lib\\module\\Header\\HeaderBackButton.tsx"],"sourcesContent":["import { useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport {\n  Animated,\n  I18nManager,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport MaskedView from '../MaskedView';\nimport PlatformPressable from '../PlatformPressable';\nimport type { HeaderBackButtonProps } from '../types';\n\nexport default function HeaderBackButton({\n  disabled,\n  allowFontScaling,\n  backImage,\n  label,\n  labelStyle,\n  labelVisible,\n  onLabelLayout,\n  onPress,\n  pressColor,\n  pressOpacity,\n  screenLayout,\n  tintColor: customTintColor,\n  titleLayout,\n  truncatedLabel = 'Back',\n  accessibilityLabel = label && label !== 'Back' ? `${label}, back` : 'Go back',\n  testID,\n  style,\n}: HeaderBackButtonProps) {\n  const { colors } = useTheme();\n\n  const [initialLabelWidth, setInitialLabelWidth] = React.useState<\n    undefined | number\n  >(undefined);\n\n  const tintColor =\n    customTintColor !== undefined\n      ? customTintColor\n      : Platform.select({\n          ios: colors.primary,\n          default: colors.text,\n        });\n\n  const handleLabelLayout = (e: LayoutChangeEvent) => {\n    onLabelLayout?.(e);\n\n    setInitialLabelWidth(e.nativeEvent.layout.x + e.nativeEvent.layout.width);\n  };\n\n  const shouldTruncateLabel = () => {\n    return (\n      !label ||\n      (initialLabelWidth &&\n        titleLayout &&\n        screenLayout &&\n        (screenLayout.width - titleLayout.width) / 2 < initialLabelWidth + 26)\n    );\n  };\n\n  const renderBackImage = () => {\n    if (backImage) {\n      return backImage({ tintColor });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            Boolean(labelVisible) && styles.iconWithLabel,\n            Boolean(tintColor) && { tintColor },\n          ]}\n          source={require('../assets/back-icon.png')}\n          fadeDuration={0}\n        />\n      );\n    }\n  };\n\n  const renderLabel = () => {\n    const leftLabelText = shouldTruncateLabel() ? truncatedLabel : label;\n\n    if (!labelVisible || leftLabelText === undefined) {\n      return null;\n    }\n\n    const labelElement = (\n      <View\n        style={\n          screenLayout\n            ? // We make the button extend till the middle of the screen\n              // Otherwise it appears to cut off when translating\n              [styles.labelWrapper, { minWidth: screenLayout.width / 2 - 27 }]\n            : null\n        }\n      >\n        <Animated.Text\n          accessible={false}\n          onLayout={\n            // This measurement is used to determine if we should truncate the label when it doesn't fit\n            // Only measure it when label is not truncated because we want the measurement of full label\n            leftLabelText === label ? handleLabelLayout : undefined\n          }\n          style={[\n            styles.label,\n            tintColor ? { color: tintColor } : null,\n            labelStyle,\n          ]}\n          numberOfLines={1}\n          allowFontScaling={!!allowFontScaling}\n        >\n          {leftLabelText}\n        </Animated.Text>\n      </View>\n    );\n\n    if (backImage || Platform.OS !== 'ios') {\n      // When a custom backimage is specified, we can't mask the label\n      // Otherwise there might be weird effect due to our mask not being the same as the image\n      return labelElement;\n    }\n\n    return (\n      <MaskedView\n        maskElement={\n          <View style={styles.iconMaskContainer}>\n            <Image\n              source={require('../assets/back-icon-mask.png')}\n              style={styles.iconMask}\n            />\n            <View style={styles.iconMaskFillerRect} />\n          </View>\n        }\n      >\n        {labelElement}\n      </MaskedView>\n    );\n  };\n\n  const handlePress = () => onPress && requestAnimationFrame(onPress);\n\n  return (\n    <PlatformPressable\n      disabled={disabled}\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityLabel={accessibilityLabel}\n      testID={testID}\n      onPress={disabled ? undefined : handlePress}\n      pressColor={pressColor}\n      pressOpacity={pressOpacity}\n      android_ripple={{ borderless: true }}\n      style={[styles.container, disabled && styles.disabled, style]}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <React.Fragment>\n        {renderBackImage()}\n        {renderLabel()}\n      </React.Fragment>\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    minWidth: StyleSheet.hairlineWidth, // Avoid collapsing when title is long\n    ...Platform.select({\n      ios: null,\n      default: {\n        marginVertical: 3,\n        marginHorizontal: 11,\n      },\n    }),\n  },\n  disabled: {\n    opacity: 0.5,\n  },\n  label: {\n    fontSize: 17,\n    // Title and back label are a bit different width due to title being bold\n    // Adjusting the letterSpacing makes them coincide better\n    letterSpacing: 0.35,\n  },\n  labelWrapper: {\n    // These styles will make sure that the label doesn't fill the available space\n    // Otherwise it messes with the measurement of the label\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  icon: Platform.select({\n    ios: {\n      height: 21,\n      width: 13,\n      marginLeft: 8,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithLabel:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  iconMask: {\n    height: 21,\n    width: 13,\n    marginLeft: -14.5,\n    marginVertical: 12,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n});\n"]},"metadata":{},"sourceType":"module"}